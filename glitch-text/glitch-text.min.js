window.customElements.define("glitch-text",class extends HTMLElement{constructor(){super(),this.root=this.attachShadow({mode:"closed"}),this.root.innerHTML="<slot></slot>"}set glyphs(t){this._glyphs=t,this.#a()}set ignore(t){this._ignore=t,this.#a()}set speed(t){this._speed=t,this.#a()}set duration(t){this._duration=t,this.#a()}set drop(t){this._drop=t,this.#a()}get glyphs(){return this._glyphs}get ignore(){return this._ignore}get speed(){return this._speed}get duration(){return this._duration}get drop(){return this._drop}#a(){this.text=this.node.textContent,this.previous="",this.changedIndices=[],this.interval&&clearInterval(this.interval);let t=1/this.text.length*(1/this.speed)*1e3;this.interval=setInterval(()=>this.#b(),t)}#b(){if(this.node=this.root.querySelector("slot").assignedNodes()[0],this.node.textContent===this.previousText&&this.text||this.#a(),Math.random()<this.drop)return;let i=Math.floor(Math.random()*this.text.length);if(this.changedIndices.includes(i)||this.ignore.includes(this.text[i]))return;this.changedIndices.push(i);let e=this.glyphs[Math.floor(Math.random()*this.glyphs.length)],s=this.text[i],n=this.node.textContent.substring(0,i),h=this.node.textContent.substring(i+1);this.node.textContent=`${n}${e}${h}`,this.previousText=this.node.textContent,setTimeout(()=>{if(!this.changedIndices.includes(i))return;let t=this.node.textContent.substring(0,i),e=this.node.textContent.substring(i+1);this.node.textContent=`${t}${s}${e}`,this.previousText=this.node.textContent,this.changedIndices=this.changedIndices.filter(t=>t!==i)},this.duration)}connectedCallback(){this._glyphs=this.getAttribute("glyphs")||"<>_\\/[]+^",this._ignore=this.getAttribute("ignore")||" ",this._speed=parseFloat(this.getAttribute("speed"))||.05,this._duration=parseInt(this.getAttribute("duration"))||250,this._drop=parseFloat(this.getAttribute("drop"))||0,setTimeout(()=>{null!==this.getAttribute("start")&&this.start()})}start(){this.interval||(this.node=this.root.querySelector("slot").assignedNodes()[0],this.#a())}stop(){clearInterval(this.interval),this.interval=null}isRunning(){return null!==this.interval}toggle(){this.interval?this.stop():this.start()}});